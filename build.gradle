plugins {
    id 'maven-publish'
    id 'distribution'
}

group = 'de.nrw.schule.svws'
version = '3.0.93'



publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/SVWS-NRW/SchiLD3-Binaries"
            credentials {
            	username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        mavenZip(MavenPublication) {
            artifact  'build/files.zip'
            artifactId = 'svws-schild3-binaries'
            pom {
                name = 'SVWS Schild3 Binaries'
                description = 'Diese Bibliothek stellt das ZIP-Archiv für die Schild3.0-Binaries zur Verfügung.'
                url = 'http://www.svws.nrw.de'
                licenses {
                    license {
                        name = 'Closed Source by Ribeka'
                        url = 'https://www.ribeka.com/'
                    }
                }
                scm {
                    connection = 'scm:git@github.com/SVWS-NRW/SchiLD3-Binaries'
                    developerConnection = 'scm:git@github.com/SVWS-NRW/SchiLD3-Binaries.git'
                    url = 'https://github.com/SVWS-NRW/SchiLD3-Binaries.git'
                }
            }
        }
    }
}

task copyFiles(type: Copy) {
    into "$buildDir/output"
    from "files"
}

task signSchild3(type:Exec) {
	dependsOn "copyFiles"
	workingDir file("${buildDir}/output")
	commandLine System.getenv("SVWS_SIGNTOOL_PATH"), "sign", "/fd", "sha256", "/f", System.getenv("SVWS_CERTIFICATE_PATH"), "/p", System.getenv("SVWS_CERTIFICATE_PASSWORD"), "-tr", "http://timestamp.digicert.com", "-td", "sha256", "Schild30.exe" 
}

task signMigrateDB(type:Exec) {
	dependsOn "copyFiles"
	workingDir file("${buildDir}/output")
	commandLine System.getenv("SVWS_SIGNTOOL_PATH"), "sign", "/fd", "sha256", "/f", System.getenv("SVWS_CERTIFICATE_PATH"), "/p", System.getenv("SVWS_CERTIFICATE_PASSWORD"), "-tr", "http://timestamp.digicert.com", "-td", "sha256", "MigrateDB.exe" 
}

task signSchiLDDBConfig(type:Exec) {
	dependsOn "copyFiles"
	workingDir file("${buildDir}/output")
	commandLine System.getenv("SVWS_SIGNTOOL_PATH"), "sign", "/fd", "sha256", "/f", System.getenv("SVWS_CERTIFICATE_PATH"), "/p", System.getenv("SVWS_CERTIFICATE_PASSWORD"), "-tr", "http://timestamp.digicert.com", "-td", "sha256", "SchiLD_DBConfig.exe" 
}

task doZip(type: Zip) {
	dependsOn "signSchild3"
	dependsOn "signMigrateDB"
	dependsOn "signSchiLDDBConfig"
    archiveFileName = "files.zip"
    destinationDirectory = file("$buildDir")
    from "$buildDir/output"
}

assemble.dependsOn doZip
generatePomFileForMavenZipPublication.dependsOn build
